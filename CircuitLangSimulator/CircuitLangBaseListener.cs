//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.11.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from CircuitLang.g4 by ANTLR 4.11.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419


using Antlr4.Runtime.Misc;
using IErrorNode = Antlr4.Runtime.Tree.IErrorNode;
using ITerminalNode = Antlr4.Runtime.Tree.ITerminalNode;
using IToken = Antlr4.Runtime.IToken;
using ParserRuleContext = Antlr4.Runtime.ParserRuleContext;

/// <summary>
/// This class provides an empty implementation of <see cref="ICircuitLangListener"/>,
/// which can be extended to create a listener which only needs to handle a subset
/// of the available methods.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.11.1")]
[System.Diagnostics.DebuggerNonUserCode]
[System.CLSCompliant(false)]
public partial class CircuitLangBaseListener : ICircuitLangListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="CircuitLangParser.program"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterProgram([NotNull] CircuitLangParser.ProgramContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CircuitLangParser.program"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitProgram([NotNull] CircuitLangParser.ProgramContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CircuitLangParser.module"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterModule([NotNull] CircuitLangParser.ModuleContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CircuitLangParser.module"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitModule([NotNull] CircuitLangParser.ModuleContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CircuitLangParser.module_argument_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterModule_argument_list([NotNull] CircuitLangParser.Module_argument_listContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CircuitLangParser.module_argument_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitModule_argument_list([NotNull] CircuitLangParser.Module_argument_listContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CircuitLangParser.module_output_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterModule_output_list([NotNull] CircuitLangParser.Module_output_listContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CircuitLangParser.module_output_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitModule_output_list([NotNull] CircuitLangParser.Module_output_listContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CircuitLangParser.identifier_with_array"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIdentifier_with_array([NotNull] CircuitLangParser.Identifier_with_arrayContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CircuitLangParser.identifier_with_array"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIdentifier_with_array([NotNull] CircuitLangParser.Identifier_with_arrayContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CircuitLangParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStatement([NotNull] CircuitLangParser.StatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CircuitLangParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStatement([NotNull] CircuitLangParser.StatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CircuitLangParser.assignment"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAssignment([NotNull] CircuitLangParser.AssignmentContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CircuitLangParser.assignment"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAssignment([NotNull] CircuitLangParser.AssignmentContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CircuitLangParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpression([NotNull] CircuitLangParser.ExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CircuitLangParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpression([NotNull] CircuitLangParser.ExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CircuitLangParser.unary_operation"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUnary_operation([NotNull] CircuitLangParser.Unary_operationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CircuitLangParser.unary_operation"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUnary_operation([NotNull] CircuitLangParser.Unary_operationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CircuitLangParser.binary_operator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBinary_operator([NotNull] CircuitLangParser.Binary_operatorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CircuitLangParser.binary_operator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBinary_operator([NotNull] CircuitLangParser.Binary_operatorContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CircuitLangParser.unary_operator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUnary_operator([NotNull] CircuitLangParser.Unary_operatorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CircuitLangParser.unary_operator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUnary_operator([NotNull] CircuitLangParser.Unary_operatorContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CircuitLangParser.module_call"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterModule_call([NotNull] CircuitLangParser.Module_callContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CircuitLangParser.module_call"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitModule_call([NotNull] CircuitLangParser.Module_callContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CircuitLangParser.variable_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVariable_declaration([NotNull] CircuitLangParser.Variable_declarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CircuitLangParser.variable_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVariable_declaration([NotNull] CircuitLangParser.Variable_declarationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CircuitLangParser.truth_table"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTruth_table([NotNull] CircuitLangParser.Truth_tableContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CircuitLangParser.truth_table"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTruth_table([NotNull] CircuitLangParser.Truth_tableContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CircuitLangParser.truth_table_entry"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTruth_table_entry([NotNull] CircuitLangParser.Truth_table_entryContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CircuitLangParser.truth_table_entry"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTruth_table_entry([NotNull] CircuitLangParser.Truth_table_entryContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CircuitLangParser.literal_or_wild"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLiteral_or_wild([NotNull] CircuitLangParser.Literal_or_wildContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CircuitLangParser.literal_or_wild"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLiteral_or_wild([NotNull] CircuitLangParser.Literal_or_wildContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="CircuitLangParser.literal"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLiteral([NotNull] CircuitLangParser.LiteralContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="CircuitLangParser.literal"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLiteral([NotNull] CircuitLangParser.LiteralContext context) { }

	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void EnterEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void ExitEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitTerminal([NotNull] ITerminalNode node) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitErrorNode([NotNull] IErrorNode node) { }
}
